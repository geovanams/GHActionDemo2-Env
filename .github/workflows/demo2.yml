name: Github Actions Demo - Env

on: 
  push:
    branches: [main]
    paths-ignore: [.github/**]
  pull_request:
    branches: [main]
  schedule: 
    - cron: '15 6 * * 0'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        type: environment
        required: true
env: #env workflow level
  MY_WORKFLOW_VAR: 'Worlflow variavel' 
  
jobs:
  Dev:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'Dev'
    environment: Dev #1-set env job
    steps:
      - run: echo "ðŸ§ª Testing..."
      - name: Use secrets and environment variables
        env: #env step level
          MY_SECRET: ${{ secrets.DEV_SECRET }} # Explicitly passing the secret
          MY_VAR: ${{ vars.DEV_VAR }}         # Explicitly passing the variable
        run: |
          echo "MY_VAR is: $MY_VAR"
          echo "MY_SECRET is: $MY_SECRET"
          echo "MY_REPO_SECRET is: ${{ secrets.MY_REPO_SECRET }}"
          echo "MY_REPO_VAR is:  ${{ vars.MY_REPO_VAR }}"
          echo "MY WORKFLOW VAR is: $MY_WORKFLOW_VAR"
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: geovanams
          minimum-approvals: 1
          issue-title: "Deploying v1.3.5 to prod from staging"
          issue-body: "Please approve or deny the deployment of version v1.3.5."
          exclude-workflow-initiator-as-approver: false
          fail-on-denial: true
          additional-approved-words: ''
          additional-denied-words: ''
  Test:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    environment: Test #1-set env job
    env: #env job level
      REPO_SECRET: ${{ secrets.MY_REPO_SECRET }} #call secret repo
      REPO_VAR: ${{ vars.MY_REPO_VAR }}
    steps:
      - run: echo "ðŸ§ª Testing..."
      - name: Use secrets and environment variables
        env: #env step level
          MY_SECRET: ${{ secrets.TEST_SECRET }} # Explicitly passing the secret
          MY_VAR: ${{ vars.TEST_VAR }}         # Explicitly passing the variable
        run: |
          echo "MY_VAR is: $MY_VAR"
          echo "MY_SECRET is: $MY_SECRET"
          echo "MY_REPO_SECRET is: $REPO_SECRET"
          echo "MY_REPO_VAR is: $REPO_VAR"
          echo "MY WORKFLOW VAR is: $MY_WORKFLOW_VAR"
          

